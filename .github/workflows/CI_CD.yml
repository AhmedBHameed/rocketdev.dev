# This is a basic workflow to help you get started with Actions

name: CI CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      # - uses: actions/checkout@v2
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # - run: yarn
      # - run: yarn build
      # # - run: yarn test

      # - name: Remove env file after build
      #   run: rm -fr .env

      # - name: Install SSH Key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      # - name: Adding Known Hosts
      #   run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # - name: Deploy to server
      #   id: deploy
      #   uses: Pendect/action-rsyncer@v1.1.0
      #   env:
      #     DEPLOY_KEY: ${{secrets.SSH_PRIVATE_KEY}}
      #   with:
      #     flags: '-avzr --delete --exclude keys'
      #     options: ''
      #     ssh_options: ''
      #     src: '.'
      #     dest: '${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/ahmed/www/rocketdev.dev'

      # - name: Display status from deploy
      #   run: echo "${{ steps.deploy.outputs.status }}"

      - name: Rebuild and run docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            echo "üîÑ Shutdown docker container ..."
            sudo docker-compose -f docker-compose.prod.yml stop
            echo "üõ†Ô∏èüöÄ Building project ..."
            sudo docker-compose -f docker-auth.build.yml up -d --build --force-recreate --build
